// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  describe('tasklistCtrl', function() {
    var ctrl, mockModal, mockTask, scope, tasklistCtrl;
    beforeEach(module('niblApp'));
    scope = {};
    tasklistCtrl = {};
    mockTask = {};
    ctrl = {};
    mockModal = {};
    beforeEach(inject(function($controller, $rootScope) {
      scope = $rootScope.$new();
      mockTask = sinon.stub({
        all: 'tasklist',
        complete: function(taskId) {},
        undocomplete: function(taskId) {},
        "delete": function(taskId) {}
      });
      mockModal = sinon.stub({
        open: function() {}
      });
      return ctrl = $controller('tasklistCtrl', {
        $scope: scope,
        Task: mockTask,
        Project: {},
        $modal: mockModal
      });
    }));
    it('should get task array by calling Task.all', function() {
      return expect(scope.tasks).toBe('tasklist');
    });
    it('should call modal service on openTaskForm', function() {
      scope.openTaskForm();
      return expect(mockModal.open.called).toBe(true);
    });
    it('should switch task.complete to true by calling Task.complete if checkbox is clicked and vice versa', function() {
      var task;
      task = {
        $id: 1,
        completed: true
      };
      expect(mockTask.complete.calledWith(1)).toBe(true);
      task.completed = false;
      return expect(mockTask.undoComplete.calledWith(1)).toBe(true);
    });
    return it('should call Task.delete on $scope.deleteTask', function() {
      var task;
      task = {
        $id: 1
      };
      scope.deleteTask(task);
      return expect(mockTask["delete"].calledWith(1)).toBe(true);
    });
  });

}).call(this);
