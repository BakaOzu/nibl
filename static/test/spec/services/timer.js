// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  describe('timer', function() {
    it('should start with zeros in minutes, seconds, and undefined in timer type and task ', function() {
      expect(timer.seconds).toEqual(0);
      expect(timer.minutes).toEqual(0);
      expect(timer.type).toBeUndefined();
      return expect(timer.task).toBeUndefined();
    });
    it('should cancel currentTimer on timer.stop()', function() {
      return expect(mockInterval.cancel()).toBe(true);
    });
    return describe('countdown', function() {
      it('should open modal window on start');
      expect(mockModal.open.called()).toBe(true);
      it('should get time interval in minutes, change minutes to it, seconds to zero and timer type to countdown', function() {
        timer.countdown(20, 'cleaning');
        expect(timer.seconds).toEqual(20);
        expect(timer.minutes).toEqual(0);
        expect(timer.type).toEqual('countdown');
        return expect(timer.task).toEqual('cleaning');
      });
      return it('should call Task.addPomodoro(taskid) with current timer.task in end', function() {
        timer.countdown(20, {
          name: 'cleaning',
          id: 1
        });
        return expect(mockTask.addPomodoro.called(1)).toBe(true);
      });
    });
  });

}).call(this);
